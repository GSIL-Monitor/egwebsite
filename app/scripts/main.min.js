/* eslint-env browser */
(function() {
  'use strict';

  var isLocalhost = Boolean(window.location.hostname === 'localhost' ||
      // [::1] is the IPv6 localhost address.
      window.location.hostname === '[::1]' ||
      // 127.0.0.1/8 is considered localhost for IPv4.
      window.location.hostname.match(
        /^127(?:\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/
      )
    );

  if ('serviceWorker' in navigator &&
      (window.location.protocol === 'https:' || isLocalhost)) {
    navigator.serviceWorker.register('service-worker.js')
    .then(function(registration) {
      registration.onupdatefound = function() {
        if (navigator.serviceWorker.controller) {
          var installingWorker = registration.installing;

          installingWorker.onstatechange = function() {
            switch (installingWorker.state) {
              case 'installed':
                break;
              case 'redundant':
                throw new Error('The installing ' +
                                'service worker became redundant.');
              default:
                // Ignore
            }
          };
        }
      };
    }).catch(function(e) {
      console.error('Error during service worker registration:', e);
    });
  }

  // wave-animation
  var h1, h2, b1, b2, a1, a2; // eslint-disable-line
  if (window.matchMedia('(min-width: 575px)').matches) {
    h1 = 90; h2 = 80; b1 = 8; b2 = 6; a1 = 75; a2 = 60;
  } else {
    h1 = 50; h2 = 40; b1 = 4; b2 = 3; a1 = 48; a2 = 36;
  }
  if (window.matchMedia('(min-width: 1200px)').matches) {
    b1 = 9; b2 = 7;
  } else if (window.matchMedia('(min-width: 992px)').matches) {
    b1 = 8; b2 = 6;
  }
  $('#gl-brand-wave').wavify({ // eslint-disable-line
    height: h1,
    bones: b1,
    amplitude: a1,
    color: 'rgba(189,223,242,0.6)',
    speed: 0.05
  });
  $('#gl-brand-wave-two').wavify({ // eslint-disable-line
    height: h2,
    bones: b2,
    amplitude: a2,
    color: 'rgba(151,202,235,.4)',
    speed: 0.07
  });
})();
